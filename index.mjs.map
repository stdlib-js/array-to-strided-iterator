{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert-is-function';\nimport isCollection from '@stdlib/assert-is-collection';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\nimport isAccessorArray from '@stdlib/array-base-assert-is-accessor-array';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport accessorGetter from '@stdlib/array-base-accessor-getter';\nimport getter from '@stdlib/array-base-getter';\nimport dtype from '@stdlib/array-dtype';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over elements in an array-like object according to specified stride parameters.\n*\n* @param {NonNegativeInteger} N - number of values to iterate\n* @param {Collection} src - input value\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer\n* @throws {TypeError} fourth argument must be a nonnegative integer\n* @throws {TypeError} fifth argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var values = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n*\n* var N = 4;\n* var stride = -2;\n* var offset = 6;\n*\n* var iter = stridedarray2iterator( N, values, stride, offset );\n*\n* var v = iter.next().value;\n* // returns 7\n*\n* v = iter.next().value;\n* // returns 5\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction stridedarray2iterator( N, src, stride, offset ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar idx;\n\tvar get;\n\tvar dt;\n\tvar i;\n\tif ( !isNonNegativeInteger( N ) ) {\n\t\tthrow new TypeError( format( '01h2d,MG', N ) );\n\t}\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( '01h2y,Ix', src ) );\n\t}\n\tif ( !isInteger( stride ) ) {\n\t\tthrow new TypeError( format( '01h2z,GL', stride ) );\n\t}\n\tif ( !isNonNegativeInteger( offset ) ) {\n\t\tthrow new TypeError( format( '01h30,Lq', offset ) );\n\t}\n\tif ( arguments.length > 4 ) {\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( '01h31,Lk', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tidx = offset;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tdt = dtype( src );\n\tif ( isAccessorArray( src ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = fcn.call( thisArg, get( src, idx ), idx, i, src );\n\t\tidx += stride;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = get( src, idx );\n\t\tidx += stride;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn stridedarray2iterator( N, src, stride, offset, fcn, thisArg ); // eslint-disable-line max-len\n\t\t}\n\t\treturn stridedarray2iterator( N, src, stride, offset );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default stridedarray2iterator;\n"],"names":["stridedarray2iterator","N","src","stride","offset","thisArg","iter","FLG","fcn","idx","get","dt","i","isNonNegativeInteger","TypeError","format","isCollection","isInteger","arguments","length","isFunction","setReadOnly","next1","next2","end","iteratorSymbol","factory","dtype","isAccessorArray","accessorGetter","getter","v","done","call","value"],"mappings":";;+kCAyEA,SAASA,EAAuBC,EAAGC,EAAKC,EAAQC,GAC/C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAsBZ,GAC3B,MAAM,IAAIa,UAAWC,EAAQ,WAAYd,IAE1C,IAAMe,EAAcd,GACnB,MAAM,IAAIY,UAAWC,EAAQ,WAAYb,IAE1C,IAAMe,EAAWd,GAChB,MAAM,IAAIW,UAAWC,EAAQ,WAAYZ,IAE1C,IAAMU,EAAsBT,GAC3B,MAAM,IAAIU,UAAWC,EAAQ,WAAYX,IAE1C,GAAKc,UAAUC,OAAS,EAAI,CAE3B,IAAMC,EADNZ,EAAMU,UAAW,IAEhB,MAAM,IAAIJ,UAAWC,EAAQ,WAAYP,IAE1CH,EAAUa,UAAW,EACrB,CAwBD,OAvBAT,EAAML,EACNQ,GAAK,EAKJS,EAFDf,EAAO,CAAA,EAEa,OADfE,EACuBc,EAEAC,GAE5BF,EAAaf,EAAM,SAAUkB,GAGxBC,GACJJ,EAAaf,EAAMmB,EAAgBC,GAGpCf,EAAKgB,EAAOzB,GAEXQ,EADIkB,EAAiB1B,GACf2B,EAAgBlB,GAEhBmB,EAAQnB,GAERL,EAQP,SAASgB,IACR,IAAIS,EAEJ,OADAnB,GAAK,EACAL,GAAOK,GAAKX,EACT,CACN+B,MAAQ,IAGVD,EAAIvB,EAAIyB,KAAM5B,EAASK,EAAKR,EAAKO,GAAOA,EAAKG,EAAGV,GAChDO,GAAON,EACA,CACN+B,MAASH,EACTC,MAAQ,GAET,CAQD,SAAST,IACR,IAAIQ,EAEJ,OADAnB,GAAK,EACAL,GAAOK,GAAKX,EACT,CACN+B,MAAQ,IAGVD,EAAIrB,EAAKR,EAAKO,GACdA,GAAON,EACA,CACN+B,MAASH,EACTC,MAAQ,GAET,CASD,SAASR,EAAKU,GAEb,OADA3B,GAAM,EACDW,UAAUC,OACP,CACNe,MAASA,EACTF,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASN,IACR,OAAKlB,EACGR,EAAuBC,EAAGC,EAAKC,EAAQC,EAAQI,EAAKH,GAErDL,EAAuBC,EAAGC,EAAKC,EAAQC,EAC9C,CACF"}