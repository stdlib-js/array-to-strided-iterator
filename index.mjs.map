{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isFunction from '@stdlib/assert-is-function' ;\nimport isCollection from '@stdlib/assert-is-collection' ;\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer' ;\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer' ;\nimport iteratorSymbol from '@stdlib/symbol-iterator' ;\nimport arraylike2object from '@stdlib/array-base-arraylike2object' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over elements in an array-like object according to specified stride parameters.\n*\n* @param {NonNegativeInteger} N - number of values to iterate\n* @param {Collection} src - input value\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer\n* @throws {TypeError} fourth argument must be a nonnegative integer\n* @throws {TypeError} fifth argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var values = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n*\n* var N = 4;\n* var stride = -2;\n* var offset = 6;\n*\n* var iter = stridedarray2iterator( N, values, stride, offset );\n*\n* var v = iter.next().value;\n* // returns 7\n*\n* v = iter.next().value;\n* // returns 5\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction stridedarray2iterator( N, src, stride, offset ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar idx;\n\tvar get;\n\tvar i;\n\tif ( !isNonNegativeInteger( N ) ) {\n\t\tthrow new TypeError( format( '00q2p', N ) );\n\t}\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( '00q3A', src ) );\n\t}\n\tif ( !isInteger( stride ) ) {\n\t\tthrow new TypeError( format( '00q3B', stride ) );\n\t}\n\tif ( !isNonNegativeInteger( offset ) ) {\n\t\tthrow new TypeError( format( '00q3C', offset ) );\n\t}\n\tif ( arguments.length > 4 ) {\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( '00q3D', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tidx = offset;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = fcn.call( thisArg, get( src, idx ), idx, i, src );\n\t\tidx += stride;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = get( src, idx );\n\t\tidx += stride;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn stridedarray2iterator( N, src, stride, offset, fcn, thisArg ); // eslint-disable-line max-len\n\t\t}\n\t\treturn stridedarray2iterator( N, src, stride, offset );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default stridedarray2iterator;\n"],"names":["stridedarray2iterator","N","src","stride","offset","thisArg","iter","FLG","fcn","idx","get","i","isNonNegativeInteger","TypeError","format","isCollection","isInteger","arguments","length","isFunction","setReadOnly","next1","next2","end","iteratorSymbol","factory","arraylike2object","getter","v","done","call","value"],"mappings":";;+vBAsEA,SAASA,EAAuBC,EAAGC,EAAKC,EAAQC,GAC/C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAsBX,GAC3B,MAAM,IAAIY,UAAWC,EAAQ,QAASb,IAEvC,IAAMc,EAAcb,GACnB,MAAM,IAAIW,UAAWC,EAAQ,QAASZ,IAEvC,IAAMc,EAAWb,GAChB,MAAM,IAAIU,UAAWC,EAAQ,QAASX,IAEvC,IAAMS,EAAsBR,GAC3B,MAAM,IAAIS,UAAWC,EAAQ,QAASV,IAEvC,GAAKa,UAAUC,OAAS,EAAI,CAE3B,IAAMC,EADNX,EAAMS,UAAW,IAEhB,MAAM,IAAIJ,UAAWC,EAAQ,QAASN,IAEvCH,EAAUY,UAAW,GAqBtB,OAnBAR,EAAML,EACNO,GAAK,EAKJS,EAFDd,EAAO,GAEa,OADfE,EACuBa,EAEAC,GAE5BF,EAAad,EAAM,SAAUiB,GAGxBC,GACJJ,EAAad,EAAMkB,EAAgBC,GAGpCf,EAAMgB,EAAkBxB,GAAMyB,OAEvBrB,EAQP,SAASe,IACR,IAAIO,EAEJ,OADAjB,GAAK,EACAJ,GAAOI,GAAKV,EACT,CACN4B,MAAQ,IAGVD,EAAIpB,EAAIsB,KAAMzB,EAASK,EAAKR,EAAKO,GAAOA,EAAKE,EAAGT,GAChDO,GAAON,EACA,CACN4B,MAASH,EACTC,MAAQ,IAUV,SAASP,IACR,IAAIM,EAEJ,OADAjB,GAAK,EACAJ,GAAOI,GAAKV,EACT,CACN4B,MAAQ,IAGVD,EAAIlB,EAAKR,EAAKO,GACdA,GAAON,EACA,CACN4B,MAASH,EACTC,MAAQ,IAWV,SAASN,EAAKQ,GAEb,OADAxB,GAAM,EACDU,UAAUC,OACP,CACNa,MAASA,EACTF,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASJ,IACR,OAAKjB,EACGR,EAAuBC,EAAGC,EAAKC,EAAQC,EAAQI,EAAKH,GAErDL,EAAuBC,EAAGC,EAAKC,EAAQC"}